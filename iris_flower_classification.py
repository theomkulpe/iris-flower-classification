# -*- coding: utf-8 -*-
"""Iris Flower Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uXu9II6XgCeRYQ8vjiVvlKKLyIh3KLpy

1. Importing the required libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

"""2. Loading the dataset"""

link = "https://raw.githubusercontent.com/amankharwal/Website-data/master/IRIS.csv"
df = pd.read_csv(link)
df.head()

"""3. Visualising the dataset"""

sns.pairplot(df, hue = "species")

"""4. Separating input and output columns"""

data = df.values

X = data[:, 0:4]
y = data[:, 4]

"""5. Splitting the data into training and test data"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)

"""Model 1: Support Vector Machine algorithm"""

from sklearn.svm import SVC

model_svc = SVC()
model_svc.fit(X_train, y_train)

"""Predictions"""

prediction1 = model_svc.predict(X_test)

from sklearn.metrics import accuracy_score
print("The prediction accuracy is", accuracy_score(y_test, prediction1) * 100, "%.")

"""Model 2: Logistic Regression"""

from sklearn.linear_model import LogisticRegression
model_LR = LogisticRegression()
model_LR.fit(X_train, y_train)

"""Predictions"""

prediction2 = model_LR.predict(X_test)

from sklearn.metrics import accuracy_score
print("The prediction accuracy is", accuracy_score(y_test, prediction2) * 100, "%.")

"""Model 3: Decision Tree Classifier"""

from sklearn.tree import DecisionTreeClassifier
model_DTC = DecisionTreeClassifier()
model_DTC.fit(X_train, y_train)

"""Predictions"""

prediction3 = model_DTC.predict(X_test)

from sklearn.metrics import accuracy_score
print("The prediction accuracy is", accuracy_score(y_test, prediction3) * 100, "%.")

"""Making predictions based on input"""

X_new = np.array([[3, 4, 1, 0.2], [4.9, 2.2, 3.8, 1.1], [5.3, 2.5, 4.5, 1.9]])

prediction = model_svc.predict(X_new)
print("Prediction of species: {}".format(prediction))

l = list()

for i in ["sepal_length",	"sepal_width",	"petal_length",	"petal_width"]:
  print("Enter", i, "-")
  a = int(input())
  l.append(a)

X_input = np.array([l])

prediction_1 = model_svc.predict(X_input)
print("The predicted species is", prediction_1[0])